# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "development" ]
  pull_request:
    branches: [ "development" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Set Current Date As Env Variable
      - name: Set current date as env variable
        run: echo "date_today=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.

  unit-test:
    name: Perform Unit Testing
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Unit Test
        run: ./gradlew testDebugUnitTest
        continue-on-error: true # IMPORTANT: allow pipeline to continue to Android Test Report step

      - name: Upload test report
        uses: actions/upload-artifact@v3
        with:
          name: unit_test_report
          path: app/build/reports/test/testDebugUnitTest/

  debug-apk:
        name: Generate Debug APK
        runs-on: ubuntu-latest
        steps:
          - name: Checkout the code
            uses: actions/checkout@v3

          - name: Set up Java JDK 17
            uses: actions/setup-java@v4.2.1
            with:
              java-version: '17'
              distribution: 'zulu' # See 'Supported distributions' for available options
              cache: 'gradle'

          - name: Build debug APK
            run: ./gradlew build

          - name: Upload a Build Artifact
            uses: actions/upload-artifact@v4.3.1
            with:
              name: kotlinBestPracticeApp.apk
              path: app/build/outputs/apk/debug/app-debug.apk
  sonar-code-analysis:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew build sonar --info