name: On Pull Request

on:
  push:
    branches:
      - main
      - development
  pull_request:
    branches: [ "main", "development" ]
  workflow_dispatch:

jobs:
    build:
      # The type of runner that the job will run on
      runs-on: ubuntu-latest

      # Steps represent a sequence of tasks that will be executed as part of the job
      steps:
        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
        - uses: actions/checkout@v3

        # Set Current Date As Env Variable
        - name: Set current date as env variable
          run: echo "date_today=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

        # Runs a set of commands using the runners shell
        - name: Run a multi-line script
          run: |
            echo Add other actions to build,
            echo test, and deploy your project.


    lint:
      name: Lint on Debug variant
      needs:
        - build
      uses: ./.github/workflows/android-lint.yml


    unit-test:
      name: Unit Test
      needs:
        - lint
      uses: ./.github/workflows/unit-test.yml

    build-debug-apk:
      name: Debug Apk
      needs:
        - unit-test
      uses: ./.github/workflows/build_debug_apk.yml



    sonar-code-analysis:
      name: Build and analyze
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3
          with:
            fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
        - name: Set up JDK 17
          uses: actions/setup-java@v3
          with:
            java-version: 17
            distribution: 'zulu' # Alternative distribution options are available
        - name: Cache SonarCloud packages
          uses: actions/cache@v3
          with:
            path: ~/.sonar/cache
            key: ${{ runner.os }}-sonar
            restore-keys: ${{ runner.os }}-sonar
        - name: Cache Gradle packages
          uses: actions/cache@v3
          with:
            path: ~/.gradle/caches
            key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
            restore-keys: ${{ runner.os }}-gradle
        - name: Build and analyze
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          run: ./gradlew build sonar --info

    buildCD-pipeline:
      name: CD-pipeline
      uses: ./.github/workflows/releaseCICD.yml
